#summary Under work, a generalized database table for all data

= Introduction =

This document is under work, the plan is to have a generalized database table that fits all sensors.

= Version =

Still in development 

= Details =

The fields that all sensors have common:

||DB||Datetime||Packettype||Subtype||Seqnbr||Battery||Signal||Processed||
||MySQL||Datetime||byte||byte||byte||byte||byte||byte||
||Sqlite||text||integer||integer||integer||integer||integer||integer||

Note, that battery is not used for all sensors, this case it will be 255.

Sensor specific data fields:

|| ||data1||data2||data3||data4||data5||data6||data7||data8||data9||data10||data11||data12||data13||
||MySQL||byte||byte||byte||byte||byte||byte||byte||float||float||float||float||float||int||
||Sqlite||integer||integer||integer||integer||integer||integer||integer||real||real||real||real||real||integer||
||0x02||response||-||-||-||-||-||-||-||-||-||-||-||-||
||0x10||housecode||unitcode||cmnd||-||-||-||-||-||-||-||-||-||-||
||0x11||id1||id2||id3||id4||unitcode||cmnd||level||-||-||-||-||-||-||
||0x12||system||channel||cmnd||-||-||-||-||-||-||-||-||-||-||
||0x13||cmd||pulse||-||-||-||-||-||-||-||-||-||-||-||
||0x14||id1||id2||id3||unitcode||cmnd||-||-||-||-||-||-||-||-||
||0x15||id1||id2||groupcode||unitcode||cmnd||cmndseqnbr||rfu||-||-||-||-||-||-||
||0x18||housecode|| unitcode || cmnd || - || - || - || - || - ||-||-||-||-||-||
||0x19||id1 || id2|| id3 || unitcode || cmnd || - || - || - ||-||-||-||-||-||
||0x20||id1 || id2|| id3 || status || - || - || - || - ||-||-||-||-||-||
||0x28||housecode|| cmnd || - || - || - || - || - || - ||-||-||-||-||-||
||0x30||id || cmnd|| toggle || cmndtype || - || - || - || - ||-||-||-||-||-||
||0x40||id1 || id2|| temp || set point || mode || status || - || - ||-||-||-||-||-||
||0x41||unitcode|| cmnd || - || - || - || - || - || - ||-||-||-||-||-||
||0x42||unitcode1|| unitcode2 || unitcode3 || cmnd || - || - || - || - ||-||-||-||-||-||
||0x50||id1||id2||-||-||-||-||-||temp||-||-||-||-||-||
||0x51||id1||id2||humidity||humidity status||-||-||-||-||-||-||-||-||-||
||0x52||id1||id2||humidity||humidity status||-||-||-||temp||-||-||-||-||-||
||0x53||id1||id2||-||forecast||-||-||-||baro||-||-||-||-||-||
||0x54||id1||id2||humidity||humidity status||forecast||-||-||temp||baro||-||-||-||-||
||0x55||id1||id2||-||-||-||-||-||rainrate||raintotal||-||-||-||-||
||0x56||id1||id2||-||-||-||-||-||direction||av_speed||gust||temperature||chill||-||
||0x57||id1||id2||uv||-||-||-||-||temp||-||-||-||-||-||
||0x58||id1||id2||id1||id2||-||-||-||-||-||-||-||-||datetime||
||0x59||id1||id2||count||-||-||-||-||ch1||ch2||ch3||-||-||-||
||0x5A||id1||id2||count||-||-||-||-||instant||total||-||-||-||-||
||0x5B||id1||id2||count||-||-||-||-||ch1||ch2||ch3||total||-||-||
||0x5D||id1||id2||-||-||-||-||-||weight||-||-||-||-||-||
||0x70||id1||-||-||-||-||-||-||msg1-msg2||-||-||-||-||-||
||0x72||housecode1||housecode2||address||cmnd1||cmnd2||-||-||-||-||-||-||-||-||

= MySQL =

{{{
Coming soon....
}}}

= Sqlite =

Sqlite is a lightweight open source database. For easy management via web interface the [http://code.google.com/p/phpliteadmin/ phpliteadmin] can be used.

== Create database ==

At the command prompt;

{{{
$ sqlite3 database.sqlite
}}}

At the sqlite command prompt, list the database and then quit

{{{
sqlite> .databases
sqlite> .quit
}}}

Now the database file should have been created

Example:

{{{
$sqlite3 database.sqlite
SQLite version 3.7.12 2012-04-03 19:43:07
Enter ".help" for instructions
Enter SQL statements terminated with a ";"
sqlite> .databases
seq  name             file                                                      
---  ---------------  ----------------------------------------------------------
0    main             /temp/database.sqlite
sqlite> .quit
$ ls -la database.sqlite 
-rw-r--r--  1 user  staff  0 Nov 28 20:36 database.sqlite
$
}}}


== Create table ==

In the RFXCMD there is a text file called 'rfxcmd_sqlite.txt' which contains the table setup for Sqlite. To create the table, it can be imported directly from the file, from the Sqlite shell.

Example;

{{{
sqlite> .read rfxcmd_sqlite.txt
sqlite> .tables
rfxcmd
sqlite> .schema rfxcmd
CREATE TABLE 'rfxcmd' (
'id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, 
'datetime' TEXT, 
'packettype' INTEGER, 
'subtype' INTEGER, 
'seqnbr' INTEGER, 
'battery' INTEGER, 
'signal' INTEGER, 
'processed' INTEGER, 
'data1' INTEGER, 
'data2' INTEGER, 
'data3' INTEGER, 
'data4' INTEGER, 
'data5' INTEGER, 
'data6' INTEGER, 
'data7' INTEGER, 
'data8' REAL, 
'data9' REAL, 
'data10' REAL, 
'data11' REAL, 
'data12' REAL, 
'data13' INTEGER);
sqlite>
}}}

Now the Sqlite database is ready to use.