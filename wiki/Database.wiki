#summary A generalized database table for all sensor data

= Introduction =

Generalized database structure for all sensors from RFX, for Mysql, Sqlite and Postgresql.

This database format is only for rfxcmd version 0.3 and above.

== Version ==

||Version||Date||Info||
||PA1||1-DEC-2012||First version||
||PA2||9-FEB-2013||Added field for Unixtime in UTC||
||PA3||1-APR-2013||Added missing 'level' for 0x14 sensor||
||PA4||12-AUG-2013||Added PostgreSQL from Pierre-Yves Vitre||
||PA5||24-NOV-2013||Corrections in the field tables, 0x13 cmd1-3 moved to field data3, 0x13 pulse moved to field data4||

= Details =

Instructions how to setup on PostreSQL can be found [PostgreSQL here]

=== Common ===

The fields that all sensors have common:

||DB||id||Datetime||Unixtime||Packettype||Subtype||Seqnbr||Battery||Signal||Processed||
||MySQL||integer(11)||Datetime||integer(11)||varchar(2)||varchar(2)||varchar(2)||integer(2)||integer(2)||integer(1)||
||Sqlite||integer||text||integer||text||text||text||integer||integer||integer||
||PgSQL||serial||timestamp||integer||text||text||text||integer||integer||integer||

Notes

 * Battery/Signal, If no battery or signal value, then it will be 255
 * Processed, for users who want to mark the sensor data processed

=== Sensor ===

Sensor specific data fields:

|| ||data1||data2||data3||data4||data5||data6||data7||data8||data9||data10||data11||data12||data13||
||MySQL||varchar(32)||varchar(32)||varchar(32)||integer||integer||integer||integer||float||float||float||float||float||datetime||
||Sqlite||text||text||text||integer||integer||integer||integer||real||real||real||real||real||text||
||PgSQL||text||text||text||integer||integer||integer||integer||numeric||numeric||numeric||numeric||numeric||timestamp||
||0x01||cmnd||msg1||-||msg2||msg3||msg4||msg5||-||-||-||-||-||-||
||0x02||msg||-||-||-||-||-||-||-||-||-||-||-||-||
||0x03||msg1-msg33||-||-||-||-||-||-||-||-||-||-||-||-||
||0x10||housecode||-||cmnd||unitcode||-||-||-||-||-||-||-||-||-||
||0x11||id1-id4||-||cmnd||unitcode||dimlevel||-||-||-||-||-||-||-||-||
||0x12||system||-||cmnd||channel||-||-||-||-||-||-||-||-||-||
||0x13||-||-||cmd1-3||pulse||-||-||-||-||-||-||-||-||-||
||0x14||id1-id3||-||cmnd||unitcode||level||-||-||-||-||-||-||-||-||
||0x15||id1-id2||groupcode||cmnd||unitcode||cmndseqnbr||-||-||-||-||-||-||-||-||
||0x18||housecode||-||cmnd||unitcode||-||-||-||-||-||-||-||-||-||
||0x19||id1-id3||-||cmnd||unitcode||-||-||-||-||-||-||-||-||-||
||0x20||id1-id3||status||-||-||-||-||-||-||-||-||-||-||-||
||0x28||housecode||-||cmnd||-||-||-||-||-||-||-||-||-||-||
||0x30||id||-||cmnd||toggle||cmndtype||-||-||-||-||-||-||-||-||
||0x40||id1-id2||mode||status||-||-||-||set_point||temperature||-||-||-||-||-||
||0x41||unitcode||-||cmnd||-||-||-||-||-||-||-||-||-||-||
||0x42||unitcode1-3||-||cmnd||-||-||-||-||-||-||-||-||-||-||
||0x50||id1-id2||-||-||-||-||-||-||temperature||-||-||-||-||-||
||0x51||id1-id2||-||humidity status||humidity||-||-||-||-||-||-||-||-||-||
||0x52||id1-id2||-||humidity status||humidity||-||-||-||temperature||-||-||-||-||-||
||0x53||id1-id2||forecast||-||-||barometric||-||-||-||-||-||-||-||-||
||0x54||id1-id2||forecast||humidity status||humidity||barometric||-||-||temperature||-||-||-||-||-||
||0x55||id1-id2||-||-||-||-||-||-||rainrate||raintotal||-||-||-||-||
||0x56||id1-id2||-||-||-||-||-||-||temperature||av_speed||gust||direction||chill||-||
||0x57||id1-id2||-||-||uv||-||-||-||temperature||-||-||-||-||-||
||0x58||id1-id2||-||-||-||-||-||-||-||-||-||-||-||datetime||
||0x59||id1-id2||-||-||count||-||-||-||ch1||ch2||ch3||-||-||-||
||0x5A||id1-id2||-||-||packetcount||-||-||-||instant||-||-||total||-||-||
||0x5B||id1-id2||-||-||count||-||-||-||ch1||ch2||ch3||total||-||-||
||0x5D||id1-id2||-||-||-||-||-||-||weight||-||-||-||-||-||
||0x5E||reserved||-||-||-||-||-||-||-||-||-||-||-||-||
||0x5F||reserved||-||-||-||-||-||-||-||-||-||-||-||-||
||0x70||id||msg1||msg2||-||-||-||voltage||temperature||-||-||-||-||-||
||0x71||id1-id2||count3||count4||count2||count1||-||-||-||-||-||-||-||-||
||0x72||housecode||group address||sub address||cmd1_hi||cmd1_lo||-||-||cmd2||-||-||-||-||-||
||0x80||not implemented||-||-||-||-||-||-||-||-||-||-||-||-||

= MySQL =

MySQL is a open source database. For easy managament via web interface the [http://www.phpmyadmin.net/ PHPMyAdmin] can be used.

=== Install MySQL Python library ===

To be able to use MySQL with python, the MySQLdb library must be installed.

Debian/Ubuntu:

{{{
sudo apt-get install python-mysqldb
}}}

=== Create table ===

Use the text file 'rfxcmd_mysql.txt' which contains the table setup for Mysql.

The CREATE TABLE statement:

{{{
CREATE TABLE `rfxcmd` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `datetime` datetime DEFAULT NULL,
  `unixtime` int(11) DEFAULT NULL,
  `packettype` varchar(2) DEFAULT NULL,
  `subtype` varchar(2) DEFAULT NULL,
  `seqnbr` varchar(2) DEFAULT NULL,
  `battery` int(2) DEFAULT NULL,
  `rssi` int(2) DEFAULT NULL,
  `processed` int(1) DEFAULT NULL,
  `data1` varchar(32) DEFAULT NULL,
  `data2` varchar(32) DEFAULT NULL,
  `data3` varchar(32) DEFAULT NULL,
  `data4` int(11) DEFAULT NULL,
  `data5` int(11) DEFAULT NULL,
  `data6` int(11) DEFAULT NULL,
  `data7` int(11) DEFAULT NULL,
  `data8` float(16,4) DEFAULT NULL,
  `data9` float(16,4) DEFAULT NULL,
  `data10` float(16,4) DEFAULT NULL,
  `data11` float(16,4) DEFAULT NULL,
  `data12` float(16,4) DEFAULT NULL,
  `data13` datetime DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;
}}}

=== MySQL Configuration in RFXcmd ===

To be able to insert data from RFXcmd, the MySQL has to be configured in the RFXcmd config file, config.xml. There are five XML tags that needs to be filled.

<mysql_active>

 * Values 'yes' or 'no'
 * To activate Sqlite it has to be set to 'yes'
 * Default value = no

<mysql_server>

 * The address of the MySQL server
 * Default value = localhost

<mysql_username>

 * Username to the MySQL
 * Default value = user

<mysql_password>

 * Password to the MySQL
 * Default value = password

<mysql_database>

 * The database that have the RFXcmd table
 * Default value = rfxcmd

Example

{{{
<mysql_active>no</mysql_active>
<mysql_server>localhost</mysql_server>
<mysql_database>rfxcmd</mysql_database>
<mysql_username>user</mysql_username>
<mysql_password>password</mysql_password>
}}}

Note, if the mysql configuration is changed when RFXcmd is running, it has to be stopped and started again for the changes to take effect.

= Sqlite =

Sqlite is a lightweight open source database. For easy management via web interface the [http://code.google.com/p/phpliteadmin/ phpliteadmin] can be used.

=== Create database ===

At the command prompt;

{{{
$ sqlite3 database.sqlite
}}}

At the sqlite command prompt, list the database and then quit

{{{
sqlite> .databases
sqlite> .quit
}}}

Now the database file should have been created

Example:

{{{
$sqlite3 database.sqlite
SQLite version 3.7.12 2012-04-03 19:43:07
Enter ".help" for instructions
Enter SQL statements terminated with a ";"
sqlite> .databases
seq  name             file                                                      
---  ---------------  ----------------------------------------------------------
0    main             /temp/database.sqlite
sqlite> .quit
$ ls -la database.sqlite 
-rw-r--r--  1 user  staff  0 Nov 28 20:36 database.sqlite
$
}}}


=== Create table ===

Use the text file 'rfxcmd_sqlite.txt' which contains the table setup for Sqlite. To create the table, it can be imported directly from the file, from the Sqlite shell.

Example;

{{{
sqlite> .read rfxcmd_sqlite.txt
sqlite> .tables
rfxcmd
sqlite> .schema rfxcmd
CREATE TABLE 'rfxcmd' (
'id' INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, 
'datetime' TEXT, 
'datetime' INTEGER, 
'packettype' INTEGER, 
'subtype' INTEGER, 
'seqnbr' INTEGER, 
'battery' INTEGER, 
'signal' INTEGER, 
'processed' INTEGER, 
'data1' INTEGER, 
'data2' INTEGER, 
'data3' INTEGER, 
'data4' INTEGER, 
'data5' INTEGER, 
'data6' INTEGER, 
'data7' INTEGER, 
'data8' REAL, 
'data9' REAL, 
'data10' REAL, 
'data11' REAL, 
'data12' REAL, 
'data13' INTEGER);
sqlite>
}}}

Now the Sqlite database is ready to use.

=== Sqlite Configuration in RFXcmd ===

To be able to insert data from RFXcmd, the Sqlite has to be configured in the RFXcmd config file, config.xml. There are three XML tags that needs to be filled.

<sqlite_active>

 * Values 'yes' or 'no'
 * To activate Sqlite it has to be set to 'yes'
 * Default as 'no'

<sqlite_database>

 * The file of the SqLite database with path if it is not in the same path as RFXcmd
 * Default as 'sqlite.db'

<sqlite_table>

 * Name of the sqlite table
 * Default as 'rfxcmd'
 * Name of the table which has the RFXcmd structure

Example

{{{
<sqlite_active>no</sqlite_active>
<sqlite_database>sqlite.db</sqlite_database>
<sqlite_table>rfxcmd</sqlite_table>
}}}

Note, if the sqlite configuration is changed when RFXcmd is running, it has to be stopped and started again for the changes to take effect.

= PostgreSQL =


PostgreSQL is a open source database. For easy managament via web interface the PHPPgAdmin can be used.

=== Install PgSQL Python library === 

To be able to use PgSQL with python, the psycopg2 library must be installed.

Debian/Ubuntu:

{{{
$ sudo apt-get install python-psycopg2
}}}

=== Create table ===

Use the text file 'rfxcmd_pgsql.txt' which contains the table setup for Pgsql.

The CREATE TABLE statement:

{{{
CREATE TABLE rfx.rfxcmd(
id serial NOT NULL,
datetime timestamp with time zone,
unixtime integer,
packettype text,
subtype text,
seqnbr text,
battery integer,
rssi integer,
processed integer,
data1 text,
data2 text,
data3 text,
data4 integer,
data5 integer,
data6 integer,
data7 integer,
data8 numeric,
data9 numeric,
data10 numeric,
data11 numeric,
data12 numeric,
data13 timestamp with time zone
);

ALTER TABLE ONLY rfx.rfxcmd ADD CONSTRAINT rfxcmd_pkey PRIMARY KEY (id);
}}}